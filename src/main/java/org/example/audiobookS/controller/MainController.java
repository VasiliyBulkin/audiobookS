package org.example.audiobookS.controller;

import org.example.audiobookS.domain.Book;
import org.example.audiobookS.domain.User;
import org.example.audiobookS.repos.BookRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.Map;

@Controller//annotation for controller
public class MainController {//controller fo greeting
    @Autowired// This means to get the bean called Author
    // Which is auto-generated by Spring, we will use it to handle the data
    private BookRepo bookRepo;

    @GetMapping("/")//The @GetMapping annotation ensures that HTTP GET requests to /greeting are mapped to the greeting() method.
    public String greeting(Map<String, Object> model) {
        return "greeting";//return this VIEW file name from folder templates
    }

    @GetMapping("/main")
    public String main(Map<String ,Object> model){
        Iterable<Book> books = bookRepo.findAll();
        model.put("books", books);
        return "main";
    }

    @PostMapping("/main")
    public  String add (
            @AuthenticationPrincipal User owner,
            @RequestParam String name, Map<String, Object> model){
      Book book =  new Book(name,owner);
      bookRepo.save(book);
      Iterable<Book> books = bookRepo.findAll();
      model.put("books", books);
      return "main";
    }

    @PostMapping("filter")
    public String filter(@RequestParam String filter, Map<String, Object> model) {
        Iterable<Book> books;
        if (filter !=null && !filter.isEmpty()){
            books = bookRepo.findByNameContaining(filter);
        } else {
            books = bookRepo.findAll();
        }
       model.put("books", books);
        return "main";
    }

}